GET         /                                                  controllers.admin.DashboardController.index()
GET         /reset_db                                          controllers.admin.DashboardController.resetDB()
GET         /create_mockdata_db                                controllers.admin.DashboardController.createMockDataDB()
GET         /reset_contests                                    controllers.admin.DashboardController.resetContests()
GET         /create_mockdata_contests                          controllers.admin.DashboardController.createMockDataContests()

GET         /import_teams                                      controllers.admin.ImportController.showImportTeams()
GET         /import_all_new_teams                              controllers.admin.ImportController.importAllNewTeams()
GET         /import_all_changed_teams                          controllers.admin.ImportController.importAllChangedTeams()
GET         /import_all_teams                                  controllers.admin.ImportController.importAllTeams()
GET         /import_soccers                                    controllers.admin.ImportController.showImportSoccers()
GET         /import_all_new_soccers                            controllers.admin.ImportController.importAllNewSoccers()
GET         /import_all_changed_soccers                        controllers.admin.ImportController.importAllChangedSoccers()
GET         /import_all_soccers                                controllers.admin.ImportController.importAllSoccers()
GET         /import_match_events                               controllers.admin.ImportController.showImportMatchEvents()
GET         /import_all_new_match_events                       controllers.admin.ImportController.importAllNewMatchEvents()
GET         /import_all_changed_match_events                   controllers.admin.ImportController.importAllChangedMatchEvents()
GET         /import_all_match_events                           controllers.admin.ImportController.importAllMatchEvents()

GET         /points_translation/create                         controllers.admin.PointsTranslationController.resetToDefault()
GET         /points_translations                               controllers.admin.PointsTranslationController.index()
GET         /points_translation/add                            controllers.admin.PointsTranslationController.newForm()
GET         /points_translation/edit/:pointsTranslationId      controllers.admin.PointsTranslationController.edit(pointsTranslationId)
POST        /points_translation/add                            controllers.admin.PointsTranslationController.create()
GET         /points_translations/:eventType                    controllers.admin.PointsTranslationController.history(eventType: Integer)

GET         /lobby                                             controllers.admin.AdminController.lobby()

GET         /users                                             controllers.admin.UserController.index()

GET         /fantasy_points/contest/:contestId/:playerId        controllers.admin.TemplateSoccerPlayerController.showFantasyPointsInContest(contestId : String, playerId : String)
GET         /fantasy_points/match_event/:matchEventId/:playerId controllers.admin.TemplateSoccerPlayerController.showFantasyPointsInMatchEvent(matchEventId : String, playerId : String)

GET         /live_contest_entries                              controllers.admin.LiveContestEntryController.index()
GET         /live_contest_entry/:contestEntryId                controllers.admin.LiveContestEntryController.show(contestEntryId : String)

GET         /live_match_events                                 controllers.admin.LiveMatchEventController.index()
GET         /live_match_event/:liveMatchEventId                controllers.admin.LiveMatchEventController.show(liveMatchEventId : String)
GET         /live_match_event/template/:templateMatchEventId   controllers.admin.LiveMatchEventController.showWithTemplate(templateMatchEventId : String)

GET         /contest_entries                                   controllers.admin.ContestEntryController.index()
GET         /contest_entry/add                                 controllers.admin.ContestEntryController.newForm()
GET         /contest_enter/add/:contestId                      controllers.admin.ContestEntryController.enterContest(contestId : String)
POST        /contest_entry/add                                 controllers.admin.ContestEntryController.create()

GET         /contests                                          controllers.admin.ContestController.index()
GET         /contests/instantiate                              controllers.admin.ContestController.instantiateAll()
GET         /contest/:contestId                                controllers.admin.ContestController.show(contestId : String)
GET         /contest/destroy/:contestId                        controllers.admin.ContestController.destroy(contestId : String)

GET         /template_contests                                 controllers.admin.TemplateContestController.index()
GET         /template_contest/create_all                       controllers.admin.TemplateContestController.createAll()
GET         /template_contest/save/:templateContestId          controllers.admin.TemplateContestController.edit(templateContestId : String)
GET         /template_contest/save                             controllers.admin.TemplateContestController.newForm()
POST        /template_contest/save                             controllers.admin.TemplateContestController.create()
GET         /template_contest/delete/:templateContestId        controllers.admin.TemplateContestController.destroy(templateContestId : String)
GET         /template_contest/:templateContestId               controllers.admin.TemplateContestController.show(templateContestId : String)

GET         /template_match_events                             controllers.admin.TemplateMatchEventController.index()
GET         /template_match_event/:templateMatchEventId        controllers.admin.TemplateMatchEventController.show(templateMatchEventId : String)

GET         /template_soccer_teams                             controllers.admin.TemplateSoccerTeamController.index()
GET         /template_soccer_team/:templateSoccerTeam          controllers.admin.TemplateSoccerTeamController.show(templateSoccerTeam : String)

GET         /template_soccer_players                           controllers.admin.TemplateSoccerPlayerController.index()

GET         /opta_soccer_players                               controllers.admin.OptaController.optaSoccerPlayers()
GET         /opta_soccer_teams                                 controllers.admin.OptaController.optaSoccerTeams()
GET         /opta_match_events                                 controllers.admin.OptaController.optaMatchEvents()
GET         /opta_events                                       controllers.admin.OptaController.optaEvents()
GET         /opta_events/update                                controllers.admin.OptaController.updateOptaEvents()

GET         /simulator                                         controllers.admin.SimulatorController.index()

GET         /start_simulator                                   controllers.admin.SimulatorController.start()
GET         /reset_simulator                                   controllers.admin.SimulatorController.reset()
GET         /simulator_next                                    controllers.admin.SimulatorController.next()
GET         /pause_simulator                                   controllers.admin.SimulatorController.pause()
POST        /goto_simulator                                    controllers.admin.SimulatorController.gotoNextPause()
