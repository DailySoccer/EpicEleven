#shipyard:
#  image: shipyard/deploy
#  volumes:
#    - /var/run/docker.sock:/var/run/docker.sock
#  command: start
#  ports:
#    - "8080"

pgbackup:
  build: docker/pg_backup
  environment:
    PG_PASSWORD: postgres
    POSTGRES_USERNAME: postgres
  volumes:
    - ./docker/pg_backups:/shared
  links:
    - postgres:db

genghis:
  build: docker/genghis
  ports:
    - "5000:5000"
  links:
    - mongo:db

dockerui:
  image: dockerui/dockerui
  privileged: true
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  ports:
    - "9000:9000"


logspout:
#  image: gliderlabs/logspout
  build: docker/logspout_custom
  volumes:
    - /var/run/docker.sock:/tmp/docker.sock
  command: tcp://logs2.papertrailapp.com:46177

postgres:
  image: postgres
  environment:
    POSTGRES_PASSWORD: postgres

mongo:
  image: mongo:2.6
  volumes:
    - ./docker/data:/data

rabbitmq:
  image: rabbitmq
  environment:
    RABBITMQ_NODENAME: my-rabbit

nginx:
  image: jwilder/nginx-proxy
  volumes:
    - /var/run/docker.sock:/tmp/docker.sock
  ports:
    - "80:80"

web:
  build: docker/web_role
  volumes:
    - ./target/universal/stage:/app
    - ./common/app/model/migrations:/app/common/app/model/migrations
  environment:
    VIRTUAL_HOST: epicdocker.com
  links:
    - mongo
    - rabbitmq
    - postgres

worker:
  build: docker/worker_role
  volumes:
    - ./target/universal/stage:/app
    - ./common/app/model/migrations:/app/common/app/model/migrations
  links:
    - postgres
    - mongo
    - rabbitmq
    - web
