# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /test                       controllers.MainController.test()
GET     /ping                       controllers.MainController.ping()
GET     /jsontest					controllers.MainController.jsonTest()

POST    /login                      controllers.LoginController.login()
POST    /signup 					controllers.LoginController.signup()
GET     /get_user_profile           controllers.LoginController.getUserProfile()

GET     /get_active_contests        controllers.ContestController.getActiveContests()
GET     /get_active_match_events    controllers.ContestController.getActiveMatchEvents()
POST    /add_fantasy_team           controllers.ContestController.addFantasyTeam()

# LIVE
GET     /get_live_match_events/template_contest/:contest    controllers.ContestController.getLiveMatchEventsFromTemplateContest(contest)
GET     /get_live_match_events/match_events/:matchEvents    controllers.ContestController.getLiveMatchEventsFromMatchEvents(matchEvents)
GET     /get_live_fantasy_teams/:contest                    controllers.ContestController.getLiveFantasyTeams(contest)
# LIVE END

# TEST
POST    /set_live_fantasy_points/:soccerPlayerId/:points    controllers.ContestController.setLiveFantasyPointsOfSoccerPlayer(soccerPlayerId, points)
# TEST END

GET     /parse_fantasy              controllers.OptaHttpController.parseFantasy()
GET     /parse_events               controllers.OptaHttpController.parseEvents()
GET     /create_points_translation  controllers.OptaHttpController.createPointsTranslation()
GET     /player                     controllers.OptaHttpController.playersPoints()
GET     /player/:player             controllers.OptaHttpController.playerPoints(player: Int)

# ADMIN
GET     /admin                                      controllers.AdminController.dashBoard()
GET     /admin/resetdb                              controllers.AdminController.resetDB(mock : Boolean ?= false)
GET     /admin/reset_contests                       controllers.AdminController.resetContests(mock : Boolean ?= false)

GET     /admin/lobby                                controllers.AdminController.lobby()

GET     /admin/users                                controllers.AdminController.users()

GET     /admin/fantasy_teams                        controllers.AdminController.fantasyTeams()

GET     /admin/contests                             controllers.AdminController.contests()
GET     /admin/contest/:contestId                   controllers.AdminController.contest(contestId : String)

GET     /admin/template_contests                    controllers.AdminController.templateContests()
GET     /admin/template_contest/:templateContestId  controllers.AdminController.templateContest(templateContestId : String)

GET     /admin/template_match_events                controllers.AdminController.templateMatchEvents()
GET     /admin/template_match_event/:templateMatchEventId       controllers.AdminController.templateMatchEvent(templateMatchEventId : String)

GET     /admin/template_soccer_teams                controllers.AdminController.templateSoccerTeams()
GET     /admin/template_soccer_team/:templateSoccerTeam         controllers.AdminController.templateSoccerTeam(templateSoccerTeam : String)

GET     /admin/template_soccer_players              controllers.AdminController.templateSoccerPlayers()
# ADMIN END

GET     /get_xml                    controllers.OptaHttpController.getXML()
GET     /import_xml                 controllers.OptaHttpController.importXML()
POST    /opta                       controllers.OptaHttpController.optaXmlInput()

GET     /                           controllers.Assets.at(path="/public", file="index.html")
GET     /*file               		controllers.Assets.at(path="/public", file)

