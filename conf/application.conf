# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="<ruwlaV6Xu?`Ls`eU67?6aA6^YvPD3k`aVrglL;@MQRXpOaflH=0EKftJN`n2cPY"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
application.router=backend.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play;MODE=PostgreSQL;DB_CLOSE_DELAY=-1"
# db.default.user=sa
# db.default.password=""
db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost/dailysoccerdb?user=postgres&password=postgres"


# After attempting to acquire a connection and failing, try to
# connect this number of times before giving up.
# db.default.acquireRetryAttempts=10

# How long to wait before attempting to obtain a
# connection again after a failure.
# db.default.acquireRetryDelay=5 seconds

# The maximum time to wait before a call
# to getConnection is timed out.
# db.default.connectionTimeout=1 second

#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# mongodb://[username:password@]host1[:port1][,hostN[:portN]]/dbName
mongodb.uri="mongodb://localhost:27017/dailySoccerDB"

# De momento ponemos max-age a 0 para que interrogue al servidor cada vez que se pulse Refresh o Enter
# Recordar que: Si max-age!= 0, "refresh" siempre manda requests de nuevo al servidor, pero "enter" no.
# Respecto al CDN, usamos el TTL de cloudfront para configurar cada cuanto interroga a nuestro server.
assets.defaultCache="max-age=0"
