GET            /ping                                                   controllers.MainController.ping()

# Informar de la fecha del server (usado por webclient para sincronizarse con la simulacion)
GET            /current_date                                           controllers.MainController.getCurrentDate()

# Informacion de un futbolista
GET            /get_soccer_player_info/:soccerPlayer                   controllers.MainController.getTemplateSoccerPlayerInfo(soccerPlayer)
GET            /get_instance_soccer_player_info/:contest/:soccerPlayer controllers.MainController.getInstanceSoccerPlayerInfo(contest, soccerPlayer)


# Reglas del juego
GET            /get_scoring_rules                                      controllers.MainController.getScoringRules()

# Enganche de la zona de administracion
->             /admin                                                  admin.Routes

# Login
POST           /login                                                  controllers.LoginController.login()
POST           /facebooklogin                                          controllers.LoginController.facebookLogin()


POST           /signup                                                 controllers.LoginController.signup()
GET            /get_user_profile                                       controllers.LoginController.getUserProfile()
POST           /change_user_profile                                    controllers.LoginController.changeUserProfile()

POST           /ask_for_password_reset                                 controllers.LoginController.askForPasswordReset()
POST           /verify_password_reset_token                            controllers.LoginController.verifyPasswordResetToken()
POST           /reset_password                                         controllers.LoginController.resetPasswordWithToken()

# Concursos globales activos (Lobby)
GET            /get_active_contests                                    controllers.ContestController.getActiveContests()
GET            /get_public_contest/:contest                            controllers.ContestController.getPublicContest(contest)
GET            /get_contest_info/:contest                              controllers.ContestController.getContestInfo(contest)

# Concursos asociados a usuario
GET            /get_my_contests                                        controllers.ContestController.getMyContests()
GET            /get_my_contest/:contest                                controllers.ContestController.getMyContest(contest)
GET            /get_my_contest_entry/:contest                          controllers.ContestController.getMyContestEntry(contest)
GET            /get_view_contest/:contest                              controllers.ContestController.getViewContest(contest)

# Live contests asociados a usuario
GET            /get_live_match_events/template_contest/:contest        controllers.ContestController.getLiveMatchEventsFromTemplateContest(contest)

# Entrar en concurso
POST           /add_contest_entry                                      controllers.ContestEntryController.addContestEntry()
POST           /edit_contest_entry                                     controllers.ContestEntryController.editContestEntry()
# Cancelar la entrada a un concurso
POST           /cancel_contest_entry                                   controllers.ContestEntryController.cancelContestEntry()

# Sincronizacion de nuestras maquinas locales con los datos de Opta
GET            /return_xml/:timestamp                                  controllers.OptaHttpController.returnXML(timestamp: Long)
GET            /remaining/:timestamp                                   controllers.OptaHttpController.remainingXMLs(timestamp: Long)
GET            /date_last_xml                                          controllers.OptaHttpController.dateLastXML()

# Por aqui nos entran todos nuestros datos de opta
POST           /opta                                                   controllers.OptaHttpController.optaXmlInput()

# Paypal
GET            /paypal/init/:userId/:money                             controllers.PaypalController.init(userId, money: Int)
GET            /paypal/execute                                         controllers.PaypalController.execute()

# Loguear error del cliente
POST           /log                                                    controllers.LoggerController.log()

# Leer la nota de la funcion preFlight
OPTIONS        /*path                                                  controllers.MainController.preFlight(path)

# Static assets
GET            /                                                       controllers.Assets.at(path="/public", file="index.html")
GET            /*file                                                  controllers.Assets.at(path="/public", file)

